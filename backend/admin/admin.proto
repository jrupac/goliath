syntax = "proto3";

option go_package = "github.com/jrupac/goliath/admin";

package admin;

message AddUserRequest {
  // Required. String value of username. Exact values (including capitalization)
  // are persisted.
  string Username = 1;

  // Required. Key used in Fever API operations. This is defined as:
  //   md5sum($username:$password)
  // Note the ":" (colon) between the user-supplied username and password.
  string Key = 2;
}

// Empty response. Success is indicated by gRPC-level status code.
message AddUserResponse {
}

message GetMuteWordsRequest {
  // Required. Username for user for whom this feed should be added.
  string Username = 1;
}

message GetMuteWordsResponse {
  repeated string MuteWord = 1;
}

message AddMuteWordRequest {
  // Required. Username for user for whom this feed should be added.
  string Username = 1;

  // Optional. If set, each (unique) mute word will be added for the user.
  // Mute words are case-insensitive and the lowercase version of the word
  // will be persisted.
  repeated string MuteWord = 2;
}

// Empty response. Success is indicated by gRPC-level status code.
message AddMuteWordResponse {
}

message DeleteMuteWordRequest {
  // Required. Username for user for whom this feed should be added.
  string Username = 1;

  // Optional. If set, each (unique) mute word will be removed for the user.
  // Mute words are case-insensitive so the lowercase version of the word
  // specified here will be removed if present.
  repeated string MuteWord = 2;
}

// Empty response. Success is indicated by gRPC-level status code.
message DeleteMuteWordResponse {
}


message AddFeedRequest {
  // Required. Logical title of feed. It is possible to have multiple feeds of
  // the same title, so this is not checked for uniqueness.
  string Title = 1;

  // Optional. Description of feed, typically a few words in length.
  string Description = 2;

  // Required. URL should point to the fetch URL for the feed.
  string URL = 3;

  // Required. URL should point to the logical homepage for the feed.
  string Link = 5;

  // Optional. If set, this new feed will be placed under the folder of the
  // supplied name.
  string Folder = 4;

  // Required. Username for user for whom this feed should be added.
  string Username = 6;
}

// Empty response. Success is indicated by gRPC-level status code.
message AddFeedResponse {
  // Internal identifier for new feed object.
  int64 Id = 1;
}

message GetFeedsRequest {
  // Required. Username for user for whom a list of feeds is returned.
  string Username = 1;
}

message GetFeedsResponse {
  message Feed {
    // Internal identifier for new feed object.
    int64 Id = 1;

    // Logical title of feed.
    string Title = 2;
  }

  repeated Feed feeds = 1;
}

message RemoveFeedRequest {
  // Required. Username for user for whom this feed should be added.
  string Username = 1;

  // Required. Internal identifier for existing feed object.
  int64 Id = 2;
}

// Empty response. Success is indicated by gRPC-level status code.
message RemoveFeedResponse {
}

message EditFeedRequest {
  // Required. Username for user for whom this feed should be edited.
  string Username = 1;

  // Required. Internal identifier for existing feed object.
  int64 Id = 2;

  // Required. Name of new folder this feed should be moved to.
  // Note: This folder must already exist.
  string Folder = 3;
}

// Empty response. Success is indicated by gRPC-level status code.
message EditFeedResponse {
}

service AdminService {
  // Add a new user into the system.
  rpc AddUser (AddUserRequest) returns (AddUserResponse);

  // Get current muted words for a user.
  rpc GetMuteWords (GetMuteWordsRequest) returns (GetMuteWordsResponse);

  // Add mute words for a user.
  rpc AddMuteWord (AddMuteWordRequest) returns (AddMuteWordResponse);

  // Delete muted word for a user.
  rpc DeleteMuteWord (DeleteMuteWordRequest) returns (DeleteMuteWordResponse);

  // Return all feeds for a user.
  rpc GetFeeds (GetFeedsRequest) returns (GetFeedsResponse);

  // Add a new feed.
  rpc AddFeed (AddFeedRequest) returns (AddFeedResponse);

  // Remove an existing feed.
  rpc RemoveFeed (RemoveFeedRequest) returns (RemoveFeedResponse);

  // Edit an existing feed.
  rpc EditFeed (EditFeedRequest) returns (EditFeedResponse);
}